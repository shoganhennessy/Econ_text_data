filter(str_detect(term, 'since_first_topother')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.4, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = '', limits = c(-0.5,1), breaks = seq(-0.5,1,by=0.25)) +
theme_bw() + ggtitle('Log Citations by year to author first\ntop other publication') +
theme(plot.title = element_text(hjust = 0.5))
######################
## Plot both events
gridExtra::grid.arrange(Top5.eventstudy, Topother.eventstudy, nrow = 1)
# Draw event study style graph, for the top other
Topother.eventstudy <- Topother_since.data %>%
filter(total_citations > 0 & abs(since_first_topother) < 21) %>%
pdata.frame(index = c('author_name', 'publication_date')) %>%
plm(log(total_citations) ~ 0 + as.factor(since_first_topother),
data = ., model = 'random', effect = 'twoways') %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_topother')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.4, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication') +#, breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = '') +#, limits = c(-0.5,1), breaks = seq(-0.5,1,by=0.25)) +
theme_bw() + ggtitle('Log Citations by year to author first\ntop other publication') +
theme(plot.title = element_text(hjust = 0.5))
######################
## Plot both events
gridExtra::grid.arrange(Top5.eventstudy, Topother.eventstudy, nrow = 1)
# Conventional top journals
Top5_journals <- c('American Economic Review',
'Journal of Political Economy',
'The Quarterly Journal of Economics',
'Econometrica',
'Review of Economic Studies')
# Comparable next 6.
TopOther_journals <- Journals_articles.data %>% head(10) %>%
pull(journal_title) %>% setdiff(Top5_journals)
# Find date of a top 5 and Top other journal for each author
Author_cumulative_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
mutate(top5 = as.numeric(journal_title %in% Top5_journals),
topother = as.numeric(journal_title %in% TopOther_journals)) %>%
group_by(author_name, publication_date) %>%
summarise(top5_count = sum(top5),
topother_count = sum(topother)) %>%
filter(top5_count + topother_count > 0) %>%
right_join(Author_cumulative_citations.data) %>%
replace_na(list(top5_count = 0, topother_count = 0))
# Top5_since
Top5_since.data <- Author_cumulative_citations.data %>%
mutate(top5 = as.numeric(top5_count > 0)) %>%
arrange(author_name, publication_date) %>%
group_by(author_name) %>% filter(max(top5) > 0) %>%
mutate(since_first_top5 = publication_date - min(((top5!=1)+1) * publication_date)) %>%
select(author_name, publication_date, top5,
since_first_top5, total_citations) %>%
arrange(author_name, since_first_top5) %>% ungroup()
# Top other since
Topother_since.data <- Author_cumulative_citations.data %>%
mutate(topother = as.numeric(topother_count > 0)) %>%
group_by(author_name) %>% filter(max(topother) > 0) %>%
mutate(since_first_topother = publication_date - min(((topother!=1)+1) * publication_date)) %>%
select(author_name, publication_date, topother,
since_first_topother, total_citations) %>%
arrange(author_name, since_first_topother) %>% ungroup()
##############################
## Draw event study style graphs
# Event for a top 5 publication
Top5.eventstudy <- Top5_since.data %>%
filter(total_citations > 0 & abs(since_first_top5) < 21) %>%
pdata.frame(index = c('author_name', 'publication_date')) %>%
plm(log(total_citations) ~ 0 + as.factor(since_first_top5),
data = ., model = 'random', effect = 'twoways') %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_top5')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.5, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = 'Coefficient estimate', limits = c(3.5,4.5), breaks = seq(3.5,4.5,by=0.25)) +
theme_bw() + ggtitle('Log Citations by year to author first\ntop 5 publication') +
theme(plot.title = element_text(hjust = 0.5))
# Draw event study style graph, for the top other
Topother.eventstudy <- Topother_since.data %>%
filter(total_citations > 0 & abs(since_first_topother) < 21) %>%
pdata.frame(index = c('author_name', 'publication_date')) %>%
plm(log(total_citations) ~ 0 + as.factor(since_first_topother),
data = ., model = 'random', effect = 'twoways') %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_topother')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.5, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = '', limits = c(3.5,4.5), breaks = seq(3.5,4.5,by=0.25)) +
theme_bw() + ggtitle('Log Citations by year to author first\ntop other publication') +
theme(plot.title = element_text(hjust = 0.5))
######################
## Plot both events
gridExtra::grid.arrange(Top5.eventstudy, Topother.eventstudy, nrow = 1)
######################
## Plot both events
gridExtra::grid.arrange(Top5.eventstudy, Topother.eventstudy, nrow = 1)
0.75/5
rm(list = ls())
gc()
3102.48 + 725.58
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache = F, fig.align = 'center')
library(tidyverse)
library(data.table)
library(plm)
# Load the data on Economists
Economists.data <- fread('../Data/RePEc_data/Economists_data/Economists_repec_data.csv')
# Load the data on published articles
Articles.data <- fread('../Data/RePEc_data/Papers_data/Journal_articles_repec.csv')
# Load Economist-article individual links -- made externally in Python
Economists_articles.links <- fread('../Data/RePEc_data/Economists_data/Economists_articles_repec.csv')
# Load info on journal rankings
Journals.data <- fread('../Data/RePEc_data/Journals_data/Journal_info_repec.csv')
# The most prolific authors, within these data
## WHo have the most citations, in these data
Economists_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n()) %>%
arrange(-total_citations)
# SHow the top ten
Economists_citations.data %>% head(10) %>%
knitr::kable(format = 'markdown')
# Histogram of authors' citations
Economists_citations.data %>%
ggplot(aes(x = total_citations)) + theme_bw() +
geom_histogram(aes(y = ..count..), bins=50, colour='black', fill='#FF6666', alpha=0.2) +
scale_x_log10(name = 'Total Citations (log scale)',
breaks = scales::trans_breaks('log10', function(x) 10^x),
labels = scales::trans_format('log10', scales::math_format(10^.x))) +
scale_y_continuous(name = 'Author count')
# Dataframe of author citations by year
Author_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(citation_count = sum(citation_count, na.rm = T))
# Gini coefficient for authors' citations, by year
Author_citations.data %>%
group_by(publication_date) %>%
summarise(gini_coefficient = reldist::gini(citation_count)) %>%
filter(publication_date > 1975) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line(colour = 'orange') + theme_bw() +
scale_x_continuous(name = 'Among papers published in year', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among authors)',
breaks = seq(0.3, 0.55, by = 0.05), limits = c(0.3,0.55))
# create a citation count per economist per year and year since first publication
Author_citation_count.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
articles_count = n()) %>%
arrange(author_name, publication_date) %>% group_by(author_name) %>%
mutate(since_first = publication_date - first(publication_date))
# Add empty values for years since up to 40 if not listed in data (i.e. didn't publish in that year)
distinct_names <- Author_citation_count.data %>%
select(author_name) %>% distinct() %>% pull(author_name)
balanced_data <- matrix(ncol = 2, nrow = 41*length(distinct_names)) %>% data.frame()
colnames(balanced_data) <- c('author_name', 'since_first')
balanced_data$author_name <- distinct_names %>%
lapply(function(x) rep(x, 41)) %>% unlist()
balanced_data$since_first <- c(0:40) %>% rep(length(distinct_names))
## add on misisng values and a cumulative count of citatins
Author_cumulative_citations.data <- balanced_data %>%
left_join(Author_citation_count.data) %>%
group_by(author_name) %>%
replace_na(list(total_citations = 0, articles_count = 0)) %>%
mutate(publication_date = c(1:n()) - 1 + first(publication_date),
cum_citations = cumsum(total_citations)) %>%
filter(publication_date < 2020)
# SHow mean citations every year since first publication
# two lines: one considering only years in which author publishes at least once,
#            one considering all years
Author_cumulative_citations.data %>%
filter(articles_count > 0) %>% mutate(restricted = 1) %>%
rbind(Author_cumulative_citations.data) %>% mutate(restricted = !is.na(restricted)) %>%
group_by(since_first, restricted) %>%
summarise(mean_citations = mean(total_citations)) %>%
ggplot(aes(x = since_first, y = mean_citations, colour = restricted)) +
geom_point() + geom_smooth(span = 0.25, se = F) +
scale_x_continuous(name = 'Year Since First Publication', breaks = seq(0, 40, by = 5)) +
scale_y_continuous(name = 'Mean Citations', limits = c(0,120)) +
theme_bw() + theme(legend.position = 'right') +
scale_colour_manual(values = c('chartreuse4', 'darkviolet'),
breaks = c(T, F), name = 'Restriction',
labels = c('At least one\npublication\nin that year\n', 'All years'))
Journals_articles.data <- Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(journal_title) %>%
summarise(mean_citations = round(mean(citation_count, na.rm = T)),
total_citations = sum(citation_count, na.rm = T),
total_articles = n()) %>%
arrange(-total_citations)
Journals_articles.data %>% head(10) %>%
knitr::kable(format = 'markdown',
col.names = c('Journal name', 'Mean citations per article', 'Total citations', 'Count articles'))
# Conventional top journals
Top5_journals <- c('American Economic Review',
'Journal of Political Economy',
'The Quarterly Journal of Economics',
'Econometrica',
'Review of Economic Studies')
# Comparable next 6.
TopOther_journals <- Journals_articles.data %>% head(10) %>%
pull(journal_title) %>% setdiff(Top5_journals)
# Find date of a top 5 and Top other journal for each author
Author_cumulative_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
mutate(top5 = as.numeric(journal_title %in% Top5_journals),
topother = as.numeric(journal_title %in% TopOther_journals)) %>%
group_by(author_name, publication_date) %>%
summarise(top5_count = sum(top5),
topother_count = sum(topother)) %>%
filter(top5_count + topother_count > 0) %>%
right_join(Author_cumulative_citations.data) %>%
replace_na(list(top5_count = 0, topother_count = 0))
# Top5_since
Top5_since.data <- Author_cumulative_citations.data %>%
mutate(top5 = as.numeric(top5_count > 0)) %>%
arrange(author_name, publication_date) %>%
group_by(author_name) %>% filter(max(top5) > 0) %>%
mutate(since_first_top5 = publication_date - min(((top5!=1)+1) * publication_date)) %>%
select(author_name, publication_date, top5,
since_first_top5, total_citations) %>%
arrange(author_name, since_first_top5) %>% ungroup()
# Top other since
Topother_since.data <- Author_cumulative_citations.data %>%
mutate(topother = as.numeric(topother_count > 0)) %>%
group_by(author_name) %>% filter(max(topother) > 0) %>%
mutate(since_first_topother = publication_date - min(((topother!=1)+1) * publication_date)) %>%
select(author_name, publication_date, topother,
since_first_topother, total_citations) %>%
arrange(author_name, since_first_topother) %>% ungroup()
##############################
## Draw event study style graphs
# Event for a top 5 publication
Top5.eventstudy <- Top5_since.data %>%
filter(total_citations > 0 & abs(since_first_top5) < 16) %>%
pdata.frame(index = c('author_name', 'publication_date')) %>%
plm(log(total_citations) ~ 0 + as.factor(since_first_top5),
data = ., model = 'random', effect = 'twoways')
Top5_event.graph <- Top5.eventstudy %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_top5')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.5, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = 'Coefficient estimate', limits = c(3.75,4.5), breaks = seq(3.75,4.5,by=0.125)) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5)) +
labs(title   = 'Log Citations by year to author first\ntop 5 publication',
caption = '')
# Draw event study style graph, for the top other
Topother.eventstudy <- Topother_since.data %>%
filter(total_citations > 0 & abs(since_first_topother) < 16) %>%
pdata.frame(index = c('author_name', 'publication_date')) %>%
plm(log(total_citations) ~ 0 + as.factor(since_first_topother),
data = ., model = 'random', effect = 'twoways')
Topother_event.graph <- Topother.eventstudy %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_topother')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.5, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = '', limits = c(3.75,4.5), breaks = seq(3.75,4.5,by=0.125)) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5)) +
labs(title   = 'Log Citations by year to author first\ntop other publication',
caption = '')
######################
## Plot both events
gridExtra::grid.arrange(Top5_event.graph, Topother_event.graph, nrow = 1)
Topother.eventstudy %>% summary() %>% str()
Topother.eventstudy %>% summary()
Topother.eventstudy %>% summary() %>% panelmodel()
Topother.eventstudy %>% summary('panelmodel')
Topother.eventstudy %>% summary() %>% attributes()
Topother.eventstudy %>% summary() %>% pull(model)
summary(Topother.eventstudy)$model
Topother.eventstudy %>% summary() %>% attributes()
summary(Topother.eventstudy)$class
summary(Topother.eventstudy)$panelmodel
summary(Topother.eventstudy)$call
summary(Topother.eventstudy)$aliased
summary(Topother.eventstudy)$args
Topother.eventstudy %>% summary() %>% attributes()
summary(Topother.eventstudy)$contrasts
summary(Topother.eventstudy)$assign
summary(Topother.eventstudy)$model
Topother.eventstudy %>% summary() %>% attributes()
summary(Topother.eventstudy)$formula
summary(Topother.eventstudy)$ercomp
summary(Topother.eventstudy)$vcov
Topother.eventstudy %>% summary() %>% attributes()
summary(Topother.eventstudy)$df
Topother.eventstudy %>% summary()
Topother.eventstudy %>% summary() %>% attributes()
summary(Topother.eventstudy)$df.residual
summary(Topother.eventstudy)$residuals
summary(Topother.eventstudy)$assign
Topother.eventstudy %>% summary() %>% attributes()
summary(Topother.eventstudy)$contrasts
summary(Topother.eventstudy)$call
summary(Topother.eventstudy)$coefficients
Topother.eventstudy %>% summary() %>% attributes()
Topother.eventstudy %>% summary()
?plm.summary
??plm.summary
Topother.eventstudy %>% summary() %>% print()
Topother.eventstudy %>% summary() %>% print(subset = 'model')
Topother.eventstudy %>% summary() %>% print() %>% attributes()
Topother.eventstudy %>% summary() %>% print(subset = 'mCall')
Topother.eventstudy %>% summary() %>% print(subset = 'Call')
Topother.eventstudy %>% summary() %>% coefficients()
Topother.eventstudy %>% summary() %>% as.list()
Topother.eventstudy %>% summary() %>% as.list()[[1]]
as.list(summary(Topother.eventstudy))[[1]]
as.list(summary(Topother.eventstudy))[[2]]
as.list(summary(Topother.eventstudy))[1
]
as.list(summary(Topother.eventstudy))[2]
as.list(summary(Topother.eventstudy))[3]
as.list(summary(Topother.eventstudy))[4]
as.list(summary(Topother.eventstudy))[5]
as.list(summary(Topother.eventstudy))[[1]]
as.list(summary(Topother.eventstudy))[[2]]
as.list(summary(Topother.eventstudy))[[3]]
as.list(summary(Topother.eventstudy))[[4]]
as.list(summary(Topother.eventstudy))[[5]]
as.list(summary(Topother.eventstudy)) %>% attributes()
as.list(summary(Topother.eventstudy))
as.list(summary(Topother.eventstudy))[['call']]
as.list(summary(Topother.eventstudy))[['panel']]
as.list(summary(Topother.eventstudy)) %>% attributes()
as.list(summary(Topother.eventstudy))[['panelmodel']]
as.list(summary(Topother.eventstudy))['panelmodel']
as.list(summary(Topother.eventstudy))[['assign']]
as.list(summary(Topother.eventstudy)) %>% str()
as.list(summary(Topother.eventstudy))
mutate(top5 = as.numeric(top5_count > 0)) %>%
k
Topother.eventstudy %>% summary() %>% capture.output()
Topother.eventstudy %>% summary() %>% capture.output() %>% nth(8)
Top5.eventstudy %>% summary() %>% capture.output() %>% nth(8)
Top5_event.graph <- Top5.eventstudy %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_top5')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.5, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = 'Coefficient estimate', limits = c(3.75,4.5), breaks = seq(3.75,4.5,by=0.125)) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5)) +
labs(title   = 'Log Citations by year to author first\ntop 5 publication',
caption = Top5.eventstudy %>% summary() %>% capture.output() %>% nth(8))
Topother_event.graph <- Topother.eventstudy %>%
broom::tidy(conf.int = T, conf.level = 0.95) %>%
filter(str_detect(term, 'since_first_topother')) %>%
mutate(coefficient = as.numeric(str_extract(term, '[^)]+$'))) %>%
mutate(estimate_before  = ifelse(coefficient < 0 , estimate, NA),
estimate_after   = ifelse(0 <= coefficient, estimate, NA),
conf.low_before  = ifelse(coefficient < 0,  conf.low, NA),
conf.low_after   = ifelse(0 < coefficient, conf.low, NA),
conf.high_before = ifelse(coefficient < 0,  conf.high, NA),
conf.high_after  = ifelse(0 < coefficient, conf.high, NA)) %>%
ggplot(aes(x = coefficient)) +
geom_point(aes(y = estimate)) +
stat_smooth(aes(y = estimate), geom='line', colour='blue', span=0.5, alpha=0.5, se=F) +
geom_line(aes(y = conf.low_before), linetype = 'dashed') +
geom_line(aes(y = conf.low_after), linetype = 'dashed') +
geom_line(aes(y = conf.high_before), linetype = 'dashed') +
geom_line(aes(y = conf.high_after), linetype = 'dashed') +
geom_smooth(aes(y = estimate_before), method = 'lm', se = F, colour = 'red') +
geom_smooth(aes(y = estimate_after), method = 'lm', se = F, colour = 'red') +
scale_x_continuous(name = 'Years after publication', breaks = seq(-20, 20, by = 5)) +
scale_y_continuous(name = '', limits = c(3.75,4.5), breaks = seq(3.75,4.5,by=0.125)) +
theme_bw() + theme(plot.title = element_text(hjust = 0.5)) +
labs(title   = 'Log Citations by year to author first\ntop other publication',
caption = Topother.eventstudy %>% summary() %>% capture.output() %>% nth(8))
######################
## Plot both events
gridExtra::grid.arrange(Top5_event.graph, Topother_event.graph, nrow = 1)
rm(list = ls())
gc()
