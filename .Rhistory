mutate(publication_date = c(1:n()) - 1 + first(publication_date),
cum_citations = cumsum(total_citations))
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations)) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point()
# create a citation count per economist per year and year since first publication
Author_citation_count.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
arrange(author_name, publication_date) %>%
group_by(author_name) %>%
mutate(since_first = publication_date - first(publication_date))
# Add empty values for years since up to 40 if not listed in data (i.e. didn't publish in that year)
distinct_names <- Author_citation_count.data %>%
select(author_name) %>% distinct() %>% pull(author_name)
balanced_data <- matrix(ncol = 2, nrow = 41*length(distinct_names)) %>% data.frame()
colnames(balanced_data) <- c('author_name', 'since_first')
balanced_data$author_name <- distinct_names %>%
lapply(function(x) rep(x, 41)) %>% unlist()
balanced_data$since_first <- c(0:40) %>% rep(length(distinct_names))
## add on misisng values and a cumulative count of citatins
Author_cumulative_citations.data <- balanced_data %>%
left_join(Author_citation_count.data) %>%
group_by(author_name) %>%
replace_na(list(total_citations = 0)) %>%
mutate(publication_date = c(1:n()) - 1 + first(publication_date),
cum_citations = cumsum(total_citations)) %>%
filter(publication_date < 2020)
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations)) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point()
rm(list =ls())
gc()
gc()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache = F, fig.align = 'center')
library(tidyverse)
library(data.table)
library(tidytext)
library(fuzzyjoin) # https://github.com/dgrtwo/fuzzyjoin
# Load the data on Economists
Economists.data <- fread('../Data/RePEc_data/Economists_data/Economists_repec_data.csv')
# Load the data on published articles
Articles.data <- fread('../Data/RePEc_data/Papers_data/Journal_articles_repec.csv')
# Load Economist-article individual links -- made externally in Python
Economists_articles.links <- fread('../Data/RePEc_data/Economists_data/Economists_articles_repec.csv')
# The most prolific authors, within these data
## WHo have the most citations, in these data
Economists_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n()) %>%
arrange(-total_citations)
# SHow the top ten
Economists_citations.data %>% head(10) %>%
knitr::kable(format = 'markdown')
# Gini coefficient for article citations.
Articles.data %>%
filter(!is.na(citation_count)) %>%
pull(citation_count) %>% reldist::gini()
# Gini coefficient for article citations.
Articles.data %>%
filter(!is.na(citation_count)) %>%
ggplot(aes(x = citation_count)) +
geom_histogram(binwidth = 1)
# Per year summarise
Citation_count.data <- Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n(),
gini_coefficient = reldist::gini(citation_count))
# Gini coefficient for article citations.
Citation_count.data %>%
filter(total_articles	> 100) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line() +
scale_x_continuous(name = 'Year Published', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among articles)',
breaks = seq(0, 0.5, by = 0.1), limits = c(0,0.5))
# Gini coefficient for authors.
Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
group_by(publication_date) %>%
summarise(gini_coefficient = reldist::gini(total_citations)) %>%
filter(publication_date > 1975) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line() +
scale_x_continuous(name = 'Year Published', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among authors)',
breaks = seq(0, 0.5, by = 0.1), limits = c(0,0.5))
Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(journal_title) %>%
summarise(mean_citations = round(mean(citation_count, na.rm = T)),
total_citations = sum(citation_count, na.rm = T),
total_articles = n()) %>%
arrange(-total_citations) %>% head(10) %>%
knitr::kable(format = 'markdown')
# create a citation count per economist per year and year since first publication
Author_citation_count.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
arrange(author_name, publication_date) %>%
group_by(author_name) %>%
mutate(since_first = publication_date - first(publication_date))
# Add empty values for years since up to 40 if not listed in data (i.e. didn't publish in that year)
distinct_names <- Author_citation_count.data %>%
select(author_name) %>% distinct() %>% pull(author_name)
balanced_data <- matrix(ncol = 2, nrow = 41*length(distinct_names)) %>% data.frame()
colnames(balanced_data) <- c('author_name', 'since_first')
balanced_data$author_name <- distinct_names %>%
lapply(function(x) rep(x, 41)) %>% unlist()
balanced_data$since_first <- c(0:40) %>% rep(length(distinct_names))
## add on misisng values and a cumulative count of citatins
Author_cumulative_citations.data <- balanced_data %>%
left_join(Author_citation_count.data) %>%
group_by(author_name) %>%
replace_na(list(total_citations = 0)) %>%
mutate(publication_date = c(1:n()) - 1 + first(publication_date),
cum_citations = cumsum(total_citations)) %>%
filter(publication_date < 2020)
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
filter(last(publication_date) > 15) %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations)) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point()
Author_cumulative_citations.data %>%
filter(last(publication_date) > 15)
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
count = n()) %>% View()
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
count = n()) %>%
filter(count > 1000) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point()
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
count = n()) %>%
filter(count > 5000) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point()
rm(list = ls())
gc()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache = F, fig.align = 'center')
library(tidyverse)
library(data.table)
library(tidytext)
library(fuzzyjoin) # https://github.com/dgrtwo/fuzzyjoin
# Load the data on Economists
Economists.data <- fread('../Data/RePEc_data/Economists_data/Economists_repec_data.csv')
# Load the data on published articles
Articles.data <- fread('../Data/RePEc_data/Papers_data/Journal_articles_repec.csv')
# Load Economist-article individual links -- made externally in Python
Economists_articles.links <- fread('../Data/RePEc_data/Economists_data/Economists_articles_repec.csv')
# The most prolific authors, within these data
## WHo have the most citations, in these data
Economists_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n()) %>%
arrange(-total_citations)
# SHow the top ten
Economists_citations.data %>% head(10) %>%
knitr::kable(format = 'markdown')
# Gini coefficient for article citations.
Articles.data %>%
filter(!is.na(citation_count)) %>%
pull(citation_count) %>% reldist::gini()
# Gini coefficient for article citations.
Articles.data %>%
filter(!is.na(citation_count)) %>%
ggplot(aes(x = citation_count)) +
geom_histogram(binwidth = 1)
# Per year summarise
Citation_count.data <- Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n(),
gini_coefficient = reldist::gini(citation_count))
# Gini coefficient for article citations.
Citation_count.data %>%
filter(total_articles	> 100) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line() +
scale_x_continuous(name = 'Year Published', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among articles)',
breaks = seq(0, 0.5, by = 0.1), limits = c(0,0.5))
# Gini coefficient for authors.
Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
group_by(publication_date) %>%
summarise(gini_coefficient = reldist::gini(total_citations)) %>%
filter(publication_date > 1975) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line() +
scale_x_continuous(name = 'Year Published', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among authors)',
breaks = seq(0, 0.5, by = 0.1), limits = c(0,0.5))
Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(journal_title) %>%
summarise(mean_citations = round(mean(citation_count, na.rm = T)),
total_citations = sum(citation_count, na.rm = T),
total_articles = n()) %>%
arrange(-total_citations) %>% head(10) %>%
knitr::kable(format = 'markdown')
# create a citation count per economist per year and year since first publication
Author_citation_count.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
arrange(author_name, publication_date) %>%
group_by(author_name) %>%
mutate(since_first = publication_date - first(publication_date))
# Add empty values for years since up to 40 if not listed in data (i.e. didn't publish in that year)
distinct_names <- Author_citation_count.data %>%
select(author_name) %>% distinct() %>% pull(author_name)
balanced_data <- matrix(ncol = 2, nrow = 41*length(distinct_names)) %>% data.frame()
colnames(balanced_data) <- c('author_name', 'since_first')
balanced_data$author_name <- distinct_names %>%
lapply(function(x) rep(x, 41)) %>% unlist()
balanced_data$since_first <- c(0:40) %>% rep(length(distinct_names))
## add on misisng values and a cumulative count of citatins
Author_cumulative_citations.data <- balanced_data %>%
left_join(Author_citation_count.data) %>%
group_by(author_name) %>%
replace_na(list(total_citations = 0)) %>%
mutate(publication_date = c(1:n()) - 1 + first(publication_date),
cum_citations = cumsum(total_citations)) %>%
filter(publication_date < 2020)
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
count = n()) %>% #filter(count > 5000) %>%
ggplot(aes(x = since_first, y = total_citations)) + #cum_citations)) +
geom_point()
mean_citations = mean(total_citations),
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
mean_citations = mean(total_citations),
count = n()) %>% #filter(count > 5000) %>%
ggplot(aes(x = since_first, y = total_citations)) + #cum_citations)) +
geom_point()
Author_cumulative_citations.data %>% names()
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
mean_citations = mean(total_citations),
count = n())
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
mean_citations = mean(total_citations),
count = n()) %>% #filter(count > 5000) %>%
ggplot(aes(x = since_first, y = total_citations)) + #cum_citations)) +
geom_point()
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(cum_citations = mean(cum_citations),
mean_citations = mean(total_citations),
count = n()) %>% #filter(count > 5000) %>%
ggplot(aes(x = since_first, y = mean_citations)) + #cum_citations)) +
geom_point()
rm(list = ls())
gc()
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE, cache = F, fig.align = 'center')
library(tidyverse)
library(data.table)
library(tidytext)
library(fuzzyjoin) # https://github.com/dgrtwo/fuzzyjoin
# Load the data on Economists
Economists.data <- fread('../Data/RePEc_data/Economists_data/Economists_repec_data.csv')
# Load the data on published articles
Articles.data <- fread('../Data/RePEc_data/Papers_data/Journal_articles_repec.csv')
# Load Economist-article individual links -- made externally in Python
Economists_articles.links <- fread('../Data/RePEc_data/Economists_data/Economists_articles_repec.csv')
# The most prolific authors, within these data
## WHo have the most citations, in these data
Economists_citations.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n()) %>%
arrange(-total_citations)
# SHow the top ten
Economists_citations.data %>% head(10) %>%
knitr::kable(format = 'markdown')
# Gini coefficient for article citations.
Articles.data %>%
filter(!is.na(citation_count)) %>%
pull(citation_count) %>% reldist::gini()
# Gini coefficient for article citations.
Articles.data %>%
filter(!is.na(citation_count)) %>%
ggplot(aes(x = citation_count)) +
geom_histogram(binwidth = 1)
# Per year summarise
Citation_count.data <- Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T),
mean_citations = round(mean(citation_count, na.rm = T)),
total_articles = n(),
gini_coefficient = reldist::gini(citation_count))
# Gini coefficient for article citations.
Citation_count.data %>%
filter(total_articles	> 100) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line() +
scale_x_continuous(name = 'Year Published', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among articles)',
breaks = seq(0, 0.5, by = 0.1), limits = c(0,0.5))
# Gini coefficient for authors.
Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
group_by(publication_date) %>%
summarise(gini_coefficient = reldist::gini(total_citations)) %>%
filter(publication_date > 1975) %>%
ggplot(aes(x = publication_date, y = gini_coefficient)) +
geom_line() +
scale_x_continuous(name = 'Year Published', breaks = seq(1975, 2020, by = 5)) +
scale_y_continuous(name = 'Citations Gini Index (among authors)',
breaks = seq(0, 0.5, by = 0.1), limits = c(0,0.5))
Articles.data %>%
filter(!is.na(citation_count) & !is.na(publication_date)) %>%
group_by(journal_title) %>%
summarise(mean_citations = round(mean(citation_count, na.rm = T)),
total_citations = sum(citation_count, na.rm = T),
total_articles = n()) %>%
arrange(-total_citations) %>% head(10) %>%
knitr::kable(format = 'markdown')
# create a citation count per economist per year and year since first publication
Author_citation_count.data <- Economists_articles.links %>%
left_join(select(Economists.data, url, name,
institution, affiliation, degree,) %>%
rename(author_name = name, author_url = url), by = 'author_url') %>%
left_join(rename(Articles.data, article_url = url), by = 'article_url') %>%
select(author_name, institution, affiliation, degree,
title, publication_date, journal_title, citation_count) %>%
filter(!is.na(citation_count)) %>%
group_by(author_name, publication_date) %>%
summarise(total_citations = sum(citation_count, na.rm = T)) %>%
arrange(author_name, publication_date) %>%
group_by(author_name) %>%
mutate(since_first = publication_date - first(publication_date))
# Add empty values for years since up to 40 if not listed in data (i.e. didn't publish in that year)
distinct_names <- Author_citation_count.data %>%
select(author_name) %>% distinct() %>% pull(author_name)
balanced_data <- matrix(ncol = 2, nrow = 41*length(distinct_names)) %>% data.frame()
colnames(balanced_data) <- c('author_name', 'since_first')
balanced_data$author_name <- distinct_names %>%
lapply(function(x) rep(x, 41)) %>% unlist()
balanced_data$since_first <- c(0:40) %>% rep(length(distinct_names))
## add on misisng values and a cumulative count of citatins
Author_cumulative_citations.data <- balanced_data %>%
left_join(Author_citation_count.data) %>%
group_by(author_name) %>%
replace_na(list(total_citations = 0)) %>%
mutate(publication_date = c(1:n()) - 1 + first(publication_date),
cum_citations = cumsum(total_citations)) %>%
filter(publication_date < 2020)
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
cum_citations = mean(mean_citations),
count = n()) %>%
ggplot(aes(x = since_first, y = cum_citations)) + #cum_citations)) +
geom_point()
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
cum_citations = mean(mean_citations),
count = n()) %>%
ggplot(aes(x = since_first, y = mean_citations)) + #cum_citations)) +
geom_point()
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
count = n()) %>%
arrange(since_first) %>% mutate(cum_citations = cumsum(mean_citations))
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
count = n()) %>%
mutate(cum_citations = cumsum(mean_citations))
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
count = n()) %>%
mutate(cum_citations = cumsum(mean_citations))
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
count = n()) %>%
mutate(cum_citations = cumsum(mean_citations)) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point()
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
count = n()) %>%
mutate(cum_citations = cumsum(mean_citations)) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_line()
# SHow mean citations every year since first publication
Author_cumulative_citations.data %>%
group_by(since_first) %>%
summarise(mean_citations = mean(total_citations),
count = n()) %>%
mutate(cum_citations = cumsum(mean_citations)) %>%
ggplot(aes(x = since_first, y = cum_citations)) +
geom_point() +
scale_x_continuous(name = 'Year Since First Publication', breaks = seq(0, 40, by = 5)) +
scale_y_continuous(name = 'Cumulative Mean Citations',
breaks = seq(0, 800, by = 200), limits = c(0,800))
rm(list = ls())
gc()
